openapi: "3.0.0"
info:
  version: 1.0.0
  title: go-open-api
  description : Golang Openapi-generatorのテスト
  contact:
    name: Swagger API Team
    email: birnamwood19@gmail.com
    url: http://birnamwood-test.jp
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8000/api
paths:
  /users:
    get:
      summary: 全部取得
      description: 全てを取得して返す
      operationId: findUsers
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: intAPI
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
        #定義した200以外はエラーに
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: User新規登録API
      description: Userを新規登録する
      operationId: addUser
      requestBody:
        description: User新規登録
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{id}:
    get:
      summary: ユーザーID検索API
      description: IDでのユーザー検索
      operationId: find user by id
      parameters:
        - name: id
          #query/header/path/cookieの何れかを選択
          in: path
          description: 検索用ID
          #必須かどうか
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a user by ID
      description: IDでのユーザー削除
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 削除成功
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
#リクエストボディやレスポンスの定義                
components:
  schemas:
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    User:
      required:
        - id
      properties:
        id:
          type: integer
          description: Unique id of the user
        email:
          type: string
          description: email
        password:
          type: string
          description: pass
        name:
          type: string
          description: pass
          

    NewUser:
      required:
        - name
      properties:
        email:
          type: string
          description: email
        password:
          type: string
          description: pass
        name:
          type: string
          description: pass

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message